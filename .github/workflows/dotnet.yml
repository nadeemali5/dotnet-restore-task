name: .NET CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      - name: List directory contents
        run: dir  # This helps you verify the directory structure

      - name: Read configuration from JSON file (PowerShell)
        id: read_config
        shell: pwsh
        run: |
          # Read the JSON config file
          $config = Get-Content -Raw -Path "dotnet-config.json" | ConvertFrom-Json

          # Extract values from the JSON config and set them as GitHub Actions outputs
          echo "::set-output name=CUSTOM::$($config.custom)"
          echo "::set-output name=ARGUMENTS::$($config.arguments)"
          echo "::set-output name=TEST_RUN_TITLE::$($config.testRunTitle)"
          echo "::set-output name=MODIFY_OUTPUT_PATH::$($config.modifyOutputPath)"
          echo "::set-output name=SELECT_OR_CONFIG::$($config.selectOrConfig)"
          echo "::set-output name=FEED_RESTORE::$($config.feedRestore)"
          echo "::set-output name=INCLUDE_NUGET_ORG::$($config.includeNuGetOrg)"

      - name: Print environment variables
        run: |
          echo "CUSTOM = ${{ steps.read_config.outputs.CUSTOM }}"
          echo "ARGUMENTS = ${{ steps.read_config.outputs.ARGUMENTS }}"
          echo "TEST_RUN_TITLE = ${{ steps.read_config.outputs.TEST_RUN_TITLE }}"
          echo "MODIFY_OUTPUT_PATH = ${{ steps.read_config.outputs.MODIFY_OUTPUT_PATH }}"
          echo "SELECT_OR_CONFIG = ${{ steps.read_config.outputs.SELECT_OR_CONFIG }}"
          echo "FEED_RESTORE = ${{ steps.read_config.outputs.FEED_RESTORE }}"
          echo "INCLUDE_NUGET_ORG = ${{ steps.read_config.outputs.INCLUDE_NUGET_ORG }}"

      - name: Build the project
        run: |
          echo "Building the project with the following parameters:"
          echo "Custom: ${{ steps.read_config.outputs.CUSTOM }}"
          echo "Arguments: ${{ steps.read_config.outputs.ARGUMENTS }}"
          echo "ModifyOutputPath: ${{ steps.read_config.outputs.MODIFY_OUTPUT_PATH }}"
          echo "SelectOrConfig: ${{ steps.read_config.outputs.SELECT_OR_CONFIG }}"
          echo "FeedRestore: ${{ steps.read_config.outputs.FEED_RESTORE }}"
          echo "IncludeNuGetOrg: ${{ steps.read_config.outputs.INCLUDE_NUGET_ORG }}"

          dotnet build MyDotnetApp.sln --configuration Release `
            -p:Custom="${{ steps.read_config.outputs.CUSTOM }}" `
            -p:Arguments="${{ steps.read_config.outputs.ARGUMENTS }}" `
            -p:ModifyOutputPath="${{ steps.read_config.outputs.MODIFY_OUTPUT_PATH }}" `
            -p:SelectOrConfig="${{ steps.read_config.outputs.SELECT_OR_CONFIG }}" `
            -p:FeedRestore="${{ steps.read_config.outputs.FEED_RESTORE }}" `
            -p:IncludeNuGetOrg="${{ steps.read_config.outputs.INCLUDE_NUGET_ORG }}"

      - name: Run the application
        run: dotnet run --project MyDotnetApp\MyDotnetApp.csproj
